name: 'aur ruyi update'

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  check_has_update:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    outputs:
      has_update: ${{ steps.chk_upd.outputs.has_update }}
    steps:
      - name: Create env
        run: |
          pacman -Sy --noconfirm openssl git python python-pip python-beautifulsoup4 python-requests
      - uses: actions/checkout@v4
      - name: Check has update
        id: chk_upd
        run: |
          python misc/aur-ruyi/chk_update.py
          has_update=$(cat chk.res)
          echo "Has update: $has_update"
          echo "has_update=$has_update" >> "$GITHUB_OUTPUT"

  update_version:
    needs: [check_has_update]
    if: ${{ needs.check_has_update.outputs.has_update == '0' }}
    env:
      SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      SSH_PUBLIC_KEY: ${{ secrets.AUR_SSH_PUBLIC_KEY }}
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Update env
        run: |
          pacman -Sy --noconfirm fastfetch
          fastfetch
      - name: Create build env
        run: |
          pacman -Sy --noconfirm base-devel pacman-contrib wget openssl openssh git python python-pip python-beautifulsoup4 python-requests
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > /root/.ssh/aur
          echo "$SSH_PUBLIC_KEY" > /root/.ssh/aur.pub
          chmod 600 /root/.ssh/aur
          chmod 600 /root/.ssh/aur.pub
          ssh-keyscan aur.archlinux.org > /root/.ssh/known_hosts
          chmod 600 /root/.ssh/known_hosts
          cat <<EOF > /root/.ssh/config
          Host aur.archlinux.org
            IdentityFile /root/.ssh/aur
            User aur
          EOF
          git config --global user.email "lingwang@wcysite.com"
          git config --global user.name "Ling Wang"
      - uses: actions/checkout@v4
      - name: Gen PKGBUILD
        run: |
          python misc/aur-ruyi/update.py
      - name: Maintain package
        run: |
          mkdir -p ruyi-bin
          cd ruyi-bin
          git -c init.defaultBranch=master init
          git remote add origin ssh://aur@aur.archlinux.org/ruyi-bin.git
          git pull origin master

          cp ../PKGBUILD .
          useradd -m build
          chown -R build:build .
          su build -c "updpkgsums"
          su build -c "makepkg --printsrcinfo > .SRCINFO"
          rm ruyi*

          git config --global --add safe.directory $(pwd)
          git add PKGBUILD .SRCINFO
          git commit -m "Bump version"
          echo "Updated PKGBUILD:"
          cat PKGBUILD
      - name: Push to AUR
        run: |
          cd ruyi-bin
          git push origin master